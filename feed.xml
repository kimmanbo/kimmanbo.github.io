<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://kimmanbo.github.io/</id><title>Kimmanbo</title><subtitle>Studies for Computer Science technologies...</subtitle> <updated>2021-07-11T23:44:51+09:00</updated> <author> <name>Hangyoung Kim</name> <uri>https://kimmanbo.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://kimmanbo.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://kimmanbo.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Hangyoung Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>convex_bottom_bar를 수정해보자</title><link href="https://kimmanbo.github.io/posts/Flutter-convex-bottom-bar/" rel="alternate" type="text/html" title="convex_bottom_bar를 수정해보자" /><published>2021-07-08T05:19:00+09:00</published> <updated>2021-07-08T05:19:00+09:00</updated> <id>https://kimmanbo.github.io/posts/Flutter-convex-bottom-bar/</id> <content src="https://kimmanbo.github.io/posts/Flutter-convex-bottom-bar/" /> <author> <name>Hangyoung Kim</name> </author> <category term="App.Dev." /> <category term="Flutter" /> <summary> convex_bottom_bar Why modify this great library? Convex BottomAppBar는 플러터에서 예쁜 하단 네비게이션을 만들어주는 라이브러리다. 간단한 코드로 아래와 같은 예쁜 디자인을 사용할 수 있는데… Title을 넣었을 때 하단 여백이 너무 적어서 마음에 안 든다! 코드를 살펴보니 bottom padding이 2로 fix 되어있다. return Container( padding: const EdgeInsets.only(bottom: 2), child: Column( mainAxisAlignment: noLabel ? MainAxisAlignment.ce... </summary> </entry> <entry><title>정규표현식으로 암호 Validation 하기</title><link href="https://kimmanbo.github.io/posts/Regex-For-Password/" rel="alternate" type="text/html" title="정규표현식으로 암호 Validation 하기" /><published>2021-07-06T12:42:00+09:00</published> <updated>2021-07-06T12:42:00+09:00</updated> <id>https://kimmanbo.github.io/posts/Regex-For-Password/</id> <content src="https://kimmanbo.github.io/posts/Regex-For-Password/" /> <author> <name>Hangyoung Kim</name> </author> <category term="Web Development" /> <category term="Cheet Sheet" /> <summary> 참고자료 Stack Overflow 정규표현식 최소 8자, 문자 &amp;gt;= 1, 숫자 &amp;gt;= 1: "^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$" 최소 8자, 문자 &amp;gt;= 1, 숫자 &amp;gt;= 1, 특수문자 &amp;gt;= 1: "^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&amp;amp;])[A-Za-z\d@$!%*#?&amp;amp;]{8,}$" 최소 8자, 대문자 &amp;gt;= 1, 소문자 &amp;gt;= 1, 숫자 &amp;gt;= 1: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$" 최소 8자, 대문자 &amp;gt;= 1, 소문자 &amp;gt;= 1, 숫자 &amp;... </summary> </entry> <entry><title>플러터 개발환경 세팅하기 + 유튜브 추천</title><link href="https://kimmanbo.github.io/posts/Setting-Flutter-Dev-Env/" rel="alternate" type="text/html" title="플러터 개발환경 세팅하기 + 유튜브 추천" /><published>2021-06-05T20:05:00+09:00</published> <updated>2021-06-05T20:05:00+09:00</updated> <id>https://kimmanbo.github.io/posts/Setting-Flutter-Dev-Env/</id> <content src="https://kimmanbo.github.io/posts/Setting-Flutter-Dev-Env/" /> <author> <name>Hangyoung Kim</name> </author> <category term="App.Dev." /> <category term="Flutter" /> <summary> 공식 문서가 잘 되어있어서 그냥 따라하면 된다. (참고 자료) 노트 Mac 기준 Android Studio, Xcode 등 에뮬레이션 환경만 안 꼬이면 크게 문제될 건 없는 듯. 개발은 처음에 Android Studio로 깔짝깔짝 해봤는데, 현재는 인텔리제이로 작업중. 구매한게 아까워서 인텔리제이 쓰지만, 개인적으로 VSCode가 더 나은 듯…? 추천 유튜브 아래는 요즘 보고 있는 Flutter 관련 유튜브 채널들. TheFlutterWay FlutterMapp FunwithFlutter 개발 과정을 보여주거나 꿀팁을 많이 알려준다. </summary> </entry> <entry><title>NestJS 설치</title><link href="https://kimmanbo.github.io/posts/Install-NestJS/" rel="alternate" type="text/html" title="NestJS 설치" /><published>2021-04-23T20:25:00+09:00</published> <updated>2021-04-23T20:25:00+09:00</updated> <id>https://kimmanbo.github.io/posts/Install-NestJS/</id> <content src="https://kimmanbo.github.io/posts/Install-NestJS/" /> <author> <name>Hangyoung Kim</name> </author> <category term="Node.js" /> <category term="NestJS" /> <summary> NestJS에 대해 소개하는 글은 여기저기 많으니까 생략. ※ NodeJS 버전은 12 또는 14를 사용하도록 한다. (참고) ※ 또한 Yarn을 사용한 설치는 잘 안되는 경우가 있다는 이야기가 있으니, 많이 쓰이는 npm을 사용했다. NestJS 설치 npm i g @nestjs/cli 프로젝트 생성 nest new {project-name} 이렇게 프로젝트를 생성하면 기본적으로 아래의 파일들이 생성된다. - src - app.controller.spec.ts - app.controller.ts - app.module.ts - app.service.ts - main.ts NestJS는 제법 타이트한 규칙을 가진 프레임워크다. (마음대로 막 바꾸지 말고 규... </summary> </entry> <entry><title>코딩의 기술</title><link href="https://kimmanbo.github.io/posts/Review-Tech-Of-Coding/" rel="alternate" type="text/html" title="코딩의 기술" /><published>2020-09-22T16:52:00+09:00</published> <updated>2020-09-22T16:52:00+09:00</updated> <id>https://kimmanbo.github.io/posts/Review-Tech-Of-Coding/</id> <content src="https://kimmanbo.github.io/posts/Review-Tech-Of-Coding/" /> <author> <name>Hangyoung Kim</name> </author> <category term="Review" /> <category term="Book" /> <summary> (C와 C++ 게임 코드로 알아보는) 코딩의 기술 지은이: 오즈 모리하루 옮긴이: 윤인성 감상 C / CPP 개발자만 읽어야 할 것 같은 제목이지만, 전혀 그렇지 않다. 웬만한 프로그래밍 언어에 공통적으로 적용되는 “좋은 코드”를 작성하는 법을 기술한다. 책이 작고 얇기 때문에 편하게 읽을 수 있고, 내용도 알차다. 개인적으로 모든 내용에 동의하는 건 아니라서, 읽으면서 취사선택을 하면 된다고 본다. 클린 코드의 거대한 볼륨감에 압도되었다면, 이 책을 추천한다. </summary> </entry> </feed>
